<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://naokazuterada.com/</id>
  <link href="http://naokazuterada.com/"/>
  <link href="http://naokazuterada.com/feed.xml" rel="self"/>
  <updated>2014-05-22T00:16:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Long time, No see ...</title>
    <link rel="alternate" href="http://naokazuterada.com/2014/05/22/long-time-no-see.html"/>
    <id>http://naokazuterada.com/2014/05/22/long-time-no-see.html</id>
    <published>2014-05-22T00:16:00+09:00</published>
    <updated>2014-05-22T00:54:15+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;前回の記事から早１ヶ月が経過しようとしてる（アワアワ…）。前回記事書いたあたりからいきなり忙しくなって、放置状態になってしまってたので、やる気を無くさないように記事を書いとこ…。&lt;/p&gt;

&lt;p&gt;ここ一ヶ月は、かなり久しぶりにActionScriptを書いていた。PC用のAirアプリで、音楽も絡んで内容的にはなかなか楽しい仕事だった。開発期間が短かったので、最初はかなり不安だったけど、意外にスムーズに進めることが出来て、修正以外の開発時間は結構短かった。&lt;/p&gt;

&lt;p&gt;それにしても、AS久しぶりだった。たくさん書いてた頃は、WindowsだったからFlashDevelopというかなり秀逸な開発環境があって、自作クラスのコードヒントやプロジェクトテンプレートの機能など、開発を楽しくする要素盛りだくさんだったんだけど、今はもっぱらMacだし、この仕事のためにエディタ変えるのも嫌だったので、いつもどおりSublimeTextを使った。ビルドの設定だけして⌘+Bで別途立ち上げてるFlashに切り替えてプレビューするようにした。&lt;/p&gt;

&lt;p&gt;ActionScript.sublime-build
&lt;code&gt;javascript
{
  "cmd": ["osascript", "/Applications/Adobe FlashCC Preview.scpt"],
  "selector": "source.actionscript"
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ほんで、&lt;a href="/file/Adobe%20FlashCC%20Preview.scpt"&gt;このファイル&lt;/a&gt;をApplicationsフォルダに入れておく。&lt;/p&gt;

&lt;p&gt;やっぱり楽しいなAS。いや、でも、ASというかFlashなのかな？
言語という意味では、ゆるくも固くも書ける感じがいいのはいいな。急いで作ることもできるし、きっちり仕様がためしながら作ることもできるので。swcは、ソースコード群がスッキリできていい。でも、packageという概念は、ドメインに合わせてディレクトリ掘ってかないと行けないとかが、昔も思ったけどめんどくさい。ライブラリとか自前のUtil系を揃えて置かないと結構面倒な部分もあった。これは、日頃から蓄積してないからなんだけど、昔作ったUtil系は役に立った。DropBoxに置いてて、はじめ探しても見つからなくて困ったので、これも今度GitHubにあげとこう。&lt;/p&gt;

&lt;p&gt;複数人で開発したので、不便だなと思ったのはflaファイル側で保存する部分。flaファイルに保存されるパブリッシュ設定で、コンパイル時に読み込むソースの指定で環境変数や相対パスが使えないのが不便だった。今回は、開発者それぞれがFlashアプリケーション側の環境設定でソース指定をすることで解決したけど、ソースからの再現性が担保されないので気持ち悪いと思った。&lt;/p&gt;

&lt;p&gt;今回、新しく使ってみたのは&lt;a href="http://napephys.com"&gt;nape&lt;/a&gt;という物理エンジン。Box2Dより高速ということで選んでみたけど、あんまり巷にサンプルコードがないので、オフィシャルサイトのサンプルやドキュメントに頼るしかない。今回それほど深く理解するとこまで使ってないけど、サンプル見ると色々できるようなので、どこらへんまでは簡単にできるのかとか知っておくと、今後色々応用できそうだと思った。&lt;/p&gt;

&lt;p&gt;というわけで、久しぶり！そしてまたね！ ActionScript&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Transfer to MiddleMan</title>
    <link rel="alternate" href="http://naokazuterada.com/2014/04/26/transfer-to-middleman.html"/>
    <id>http://naokazuterada.com/2014/04/26/transfer-to-middleman.html</id>
    <published>2014-04-26T00:00:00+09:00</published>
    <updated>2014-04-29T14:27:15+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt; みたいな静的サイトジェネレーターで「&lt;a href="http://middlemanapp.com/"&gt;MiddleMan&lt;/a&gt;」というのを発見し、ブログ以外にも普段の仕事なんかでも使えるかなと思って、切り替えてみた。で、また色々つっかえたので書いとく。&lt;/p&gt;

&lt;p&gt;つっかえた原因は、MiddleManのせいではなく、GithubPagesの仕様をちゃんと理解していなかったからだった。&lt;/p&gt;

&lt;p&gt;GitHubPagesは、そのリポジトリがProjectのサイトなのか、UserまたはOrganizationのサイトなのかによって、若干仕様が違うらしい。Projectサイトの場合は、&lt;code&gt;gh-pages&lt;/code&gt;ブランチのコンテンツが表示され、User/Organizationサイトの場合は、&lt;code&gt;master&lt;/code&gt;ブランチのコンテンツが表示されるらしい&lt;sup id="fnref:1"&gt;&lt;a href="#fn:1" class="footnote"&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;

&lt;p&gt;今回、middleman-deployを使って、&lt;code&gt;config.rb&lt;/code&gt;で&lt;code&gt;gh-pages&lt;/code&gt;ブランチをdeploy先に指定していたせいでサイトが表示されなくて困った。
前回までも、上記の仕様を知らずに、&lt;code&gt;gh-pages&lt;/code&gt;ブランチを使っていたんだけど、どうもJekyllを使っていたからGitHub側できちんとdeployしてくれて表示ができていたということらしい。&lt;/p&gt;

&lt;p&gt;変な仕様だなと思うんだけど、まぁ確かにプロジェクトの方はメイン（master）はプロジェクトのソースコードで、ユーザー／Organizationの方はサイトがメインと考えられるから、まぁ納得。でも、ちょっと気づきにくいなぁ。&lt;/p&gt;

&lt;p&gt;あとは、&lt;code&gt;confg.rb&lt;/code&gt;で&lt;/p&gt;

&lt;p&gt;&lt;code&gt;rb
Time.zone = "Tokyo"
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;としてなくて、今書いてる記事がbuildされない（多分深夜だったからUTC時間では未来だと判定されたのだろう…）など、あったが、まぁ、まぁ。なにはともあれ、とりあえず公開までできたので、色々試していこうと思う。Jekyllでは、Octpressからコード整形プラグイン引っこ抜くなど、それなりに時間かかったんだけど、また振り出しです。がんばろー・・・っと。&lt;/p&gt;

&lt;p&gt;注：なんだか、前回は「ですます調」で書いたんだけど、なんか疲れたのでこんな感じで・・・&lt;/p&gt;
&lt;div class="footnotes"&gt;
  &lt;ol&gt;
    &lt;li id="fn:1"&gt;
      &lt;p&gt;参考 &lt;a href="http://blog.coiney.com/2013/06/21/host-middleman-blog-on-github/"&gt;middleman-blogをgithubでホストする / Coiney Developer Blog&lt;/a&gt; &lt;a href="#fnref:1" class="reversefootnote"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title>First Post</title>
    <link rel="alternate" href="http://naokazuterada.com/2014/04/13/first-post.html"/>
    <id>http://naokazuterada.com/2014/04/13/first-post.html</id>
    <published>2014-04-13T00:00:00+09:00</published>
    <updated>2014-04-29T01:21:52+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;ブログなんて何年ぶりかわからないけど、気になっていた&lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;の勉強がてらはじめてみることにしました。記憶からこぼれ落ちそうな内容を、書き留めておく場所にしようかな？と思ったので、タイトルは「Out of My Memory」としてみます。&lt;/p&gt;

&lt;p&gt;さっそく、jekyll newした時に問題発生したので書き留めておきます。&lt;/p&gt;

&lt;p&gt;```sh
jekyll new mysite&lt;/p&gt;

&lt;p&gt;SafeYAML Warning
  —————-&lt;/p&gt;

&lt;p&gt;You appear to have an outdated version of libyaml (0.1.4) installed on your system.&lt;/p&gt;

&lt;p&gt;Prior to 0.1.6, libyaml is vulnerable to a heap overflow exploit from malicious YAML payloads.&lt;/p&gt;

&lt;p&gt;For more info, see:
  https://www.ruby-lang.org/en/news/2014/03/29/heap-overflow-in-yaml-uri-escape-parsing-cve-2014-2525/&lt;/p&gt;

&lt;p&gt;The easiest thing to do right now is probably to update Psych to the latest version and enable
  the 'bundled-libyaml' option, which will install a vendored libyaml with the vulnerability patched:&lt;/p&gt;

&lt;p&gt;gem install psych – –enable-bundled-libyaml&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;rbenvを使っていたので、普通にrbenv installでまだ入れてなかった2.0.0を入れてから試してもダメだったので、変だと思ったのですが、
探すと&lt;a href="http://stackoverflow.com/questions/22919318/fix-for-prior-to-0-1-6-libyaml-is-vulnerable-to-a-heap-overflow-exploit-from-m"&gt;stackoverflow&lt;/a&gt;に解決方法を書いてくれている人がいました。ありがたい。&lt;/p&gt;

&lt;p&gt;まず、ruby-buildを更新してからrubyをビルドするとうまくいくようです。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sh
rm -rf ~/.rbenv/plugins/ruby-build
git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
rbenv install 2.0.0-p451
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;自分がどうしたか忘れましたが（さっそく…）、このあとにJekyllをインストールしてあげれば間違いないと思います。&lt;/p&gt;

&lt;h1 id="my-first-impression-of-jekyll"&gt;My first impression of Jekyll&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;最初は、Gemfileに色々書いて言ってたんだけど、github-pagesというのだけ入れればよかった。&lt;/li&gt;
  &lt;li&gt;Github Pagesで運用する場合はconfigにsourceの指定しても無効で、&lt;a href="https://help.github.com/articles/using-jekyll-with-pages#configuration-overrides"&gt;必ずルートに設定を上書きされるらしい&lt;/a&gt;。&lt;/li&gt;
  &lt;li&gt;まだ１つしか記事書いてないが、全体のスタイルなどの更新と、記事の更新がcommit上で一緒くたになってしまうのが、若干気持ち悪いかなぁ…&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
